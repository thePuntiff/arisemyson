{"version":3,"sources":["webpack:///./src/components/Webmention/WebmentionFeed.js","webpack:///./src/templates/page-template.js"],"names":["Likes","likes","likeElements","map","link","key","id","href","data","url","src","author","photo","className","alt","name","length","Replies","replies","replyElements","dangerouslySetInnerHTML","__html","content","WebmentionReplies","target","useState","page","fetchState","setFetchState","mergeResult","old","newRes","useReducer","setReplies","setLikes","useEffect","fetch","then","response","json","links","feed","likeFeed","filter","item","indexOf","activity","type","replyFeed","PageTemplate","siteTitle","useSiteMetadata","title","markdownRemark","pageBody","html","frontmatter","fields","Layout","description","Helmet","slug","method","action","value","form"],"mappings":"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","file":"component---src-templates-page-template-js-3dc7e3a11634af0eba6c.js","sourcesContent":["import React, { useEffect, useState, useReducer } from 'react'\n\nfunction Likes({ likes }) {\n  const likeElements = likes.map(link => (\n    <li key={link.id}>\n      <a href={link.data.url}>\n        <img\n          src={link.data.author.photo}\n          className={'liked-by'}\n          alt={link.data.author.name}\n        />\n        üëè\n      </a>\n    </li>\n  ))\n\n  return (\n    <>\n      {likes && likes.length && (\n        <div className={'likes'}>\n          <ul>{likeElements}</ul>\n        </div>\n      )}\n    </>\n  )\n}\n\nfunction Replies({ replies }) {\n  const replyElements = replies.map(link => (\n    <li key={link.id}>\n      üí¨ <a href={link.data.url}>{link.data.author.name}</a> replied:{' '}\n      <span dangerouslySetInnerHTML={{ __html: link.data.content }} />\n    </li>\n  ))\n\n  return (\n    <>\n      {replies && replies.length && (\n        <div className={'mentions'}>\n          <ul>{replyElements}</ul>\n        </div>\n      )}\n    </>\n  )\n}\n\nfunction WebmentionReplies({ target }) {\n  const [page, setPage] = useState(0)\n  const [fetchState, setFetchState] = useState('fetching')\n  const mergeResult = (old, newRes) => [...old, ...newRes]\n  const initialReplies = []\n  const initialLikes = []\n  // \"The ‚ÄòuseReducer‚Äô Hook\" - https://leewarrick.com/blog/a-guide-to-usestate-and-usereducer/\n  // Instead of \"useState\", you can simply pass a merge logic as a reducer\n  const [replies, setReplies] = useReducer(mergeResult, initialReplies)\n  const [likes, setLikes] = useReducer(mergeResult, initialLikes)\n  const perPage = 30\n\n  const getMentions = () =>\n    fetch(\n      `https://webmention.io/api/mentions?page=${page}&per-page=${perPage}&target=${target}`\n    )\n      .then(response => response.json())\n      .then(json => [...json.links])\n\n  // Load initial comments once\n  useEffect(() => {\n    getMentions().then(feed => {\n      const likeFeed = feed.filter(\n        item => ['like', 'repost'].indexOf(item.activity.type) >= 0\n      )\n      const replyFeed = feed.filter(\n        item => ['like', 'repost'].indexOf(item.activity.type) < 0\n      )\n      setLikes(likeFeed)\n      setReplies(replyFeed)\n      setFetchState('done')\n    })\n  }, [])\n\n  return (\n    <div>\n      {fetchState === 'fetching' && <span>Fetching Replies...</span>}\n      {(likes.length > 0 || replies.length > 0) && <h5>Recent Mentions</h5>}\n      {likes.length > 0 && <Likes likes={likes} />}\n      {replies.length > 0 && <Replies replies={replies} />}\n    </div>\n  )\n}\n\nexport default WebmentionReplies","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport { useSiteMetadata } from '../hooks'\nimport WebmentionReplies from '../components/Webmention/WebmentionFeed'\nimport { Helmet } from 'react-helmet/es/Helmet'\n\nconst PageTemplate = ({ data }) => {\n  const { title: siteTitle } = useSiteMetadata()\n  const { html: pageBody, frontmatter, fields } = data.markdownRemark\n\n  return (\n    <Layout\n      title={`${frontmatter.title} | ${siteTitle}`}\n      description={frontmatter.description}\n    >\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {`{\n            \"@context\": \"http://schema.org\",\n            \"@type\": \"WebPage\",\n            \"name\": \"${frontmatter.title} | ${siteTitle}\",\n            \"url\": \"${'https://arisemyson.com' + fields.slug}\",\n            \"description\": \"${frontmatter.description}\"\n          }`}\n        </script>\n      </Helmet>\n      <div className={'content'}>\n        <div className={'section-title'}>{frontmatter.title}</div>\n        <article dangerouslySetInnerHTML={{ __html: pageBody }} />\n\n        <hr />\n\n        <div className={'socialize'}>\n          <form\n            id=\"comment-form\"\n            method=\"get\"\n            action=\"https://quill.p3k.io/\"\n            target=\"_blank\"\n          >\n            <input type=\"hidden\" name=\"dontask\" value=\"1\" />\n            <input type=\"hidden\" name=\"me\" value=\"https://commentpara.de/\" />\n            <input\n              type=\"hidden\"\n              name=\"reply\"\n              value={'https://arisemyson.com' + fields.slug}\n            />\n          </form>\n          <a\n            className={'button button-outline button-small'}\n            target=\"_blank\"\n            href={`https://twitter.com/intent/tweet/?text=My%20thoughts%20on%20${'https://hbish.com' +\n              fields.slug}`}\n          >\n            Tweet this post{' '}\n          </a>\n          <input\n            form=\"comment-form\"\n            className={'button button-outline button-small'}\n            type=\"submit\"\n            value=\"Write a comment\"\n          />{' '}\n        </div>\n        <WebmentionReplies target={'https://hbish.com' + fields.slug} />\n      </div>\n    </Layout>\n  )\n}\n\nexport default PageTemplate\n\nexport const pageQuery = graphql`\n  query PageBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        categories\n        tags\n        description\n      }\n    }\n  }\n`"],"sourceRoot":""}