{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/gatsby/node_modules/core-js/internals/string-trim-forced.js","webpack:///./node_modules/@deckdeckgo/highlight-code/dist/esm-es5/shadow-css-c63963b5.js","webpack:///./node_modules/gatsby/node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es.string.trim-end.js"],"names":["requireObjectCoercible","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","String","replace","module","exports","start","end","trim","fails","whitespaces","METHOD_NAME","name","__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","_parenSuffix","_cssColonHostRe","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","_commentWithHashRe","_ruleRe","_curlyRe","processRules","input","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","m","_i","selector","content","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","push","join","convertColonRule","cssText","regExp","partReplacer","parts","p","_polyfillHost","colonHostPartReplacer","host","colonHostContextPartReplacer","indexOf","selectorNeedsScoping","scopeSelector","makeScopeMatcher","test","applyStrictSelectorScope","hostSelector","res","className","_","_scopeSelectorPart","scopedP","lastIndex","replaceBy_1","before","colon","after","applySimpleSelectorScope","t","matches","match","safeContent","placeholders","index","keep","replaceBy","pseudo","exp","safeSelector","scopedSelector","startIndex","sep","shouldScope","exec","separator","part_1","slice","scopeSelectors","scopeSelectorText","slotSelector","commentOriginalSelector","map","shallowPart","scopeCssText","scopeId","hostScopeId","slotScopeId","slotted","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimRight","updatedSelector","convertColonSlotted","convertColonHostContext","convertColonHost","reduce","result","pattern","convertShadowDOMSelectors","slottedSelectors","scopeCss","commentsWithHash","stripComments","orgSelectors","processCommentedSelector_1","placeholder","comment","scoped","forEach","_a","$","$trimEnd","FORCED","forcedStringTrimMethod","trimEnd","this","target","proto","forced"],"mappings":"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","file":"18-8cfc5c4b549c79acf334.js","sourcesContent":["var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","import \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.string.trim-end.js\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n/*\n Stencil Client Platform v1.17.3 | MIT Licensed | https://stenciljs.com\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\n\n\nvar safeSelector = function safeSelector(selector) {\n  var placeholders = [];\n  var index = 0;\n  var content; // Replaces attribute selectors with placeholders.\n  // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n\n  selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n    var replaceBy = \"__ph-\" + index + \"__\";\n    placeholders.push(keep);\n    index++;\n    return replaceBy;\n  }); // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n  // WS and \"+\" would otherwise be interpreted as selector separators.\n\n  content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n    var replaceBy = \"__ph-\" + index + \"__\";\n    placeholders.push(exp);\n    index++;\n    return pseudo + replaceBy;\n  });\n  var ss = {\n    content: content,\n    placeholders: placeholders\n  };\n  return ss;\n};\n\nvar restoreSafeSelector = function restoreSafeSelector(placeholders, content) {\n  return content.replace(/__ph-(\\d+)__/g, function (_, index) {\n    return placeholders[+index];\n  });\n};\n\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted'; // note: :host-context pre-processed to -shadowcsshostcontext.\n\nvar _polyfillHostContext = '-shadowcsscontext';\n\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\n\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\n\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n\nvar stripComments = function stripComments(input) {\n  return input.replace(_commentRe, '');\n};\n\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n\nvar extractCommentsWithHash = function extractCommentsWithHash(input) {\n  return input.match(_commentWithHashRe) || [];\n};\n\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\n\nvar processRules = function processRules(input, ruleCallback) {\n  var inputWithEscapedBlocks = escapeBlocks(input);\n  var nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n    var m = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n\n    var selector = m[2];\n    var content = '';\n    var suffix = m[4];\n    var contentPrefix = '';\n\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n\n    var cssRule = {\n      selector: selector,\n      content: content\n    };\n    var rule = ruleCallback(cssRule);\n    return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n  });\n};\n\nvar escapeBlocks = function escapeBlocks(input) {\n  var inputParts = input.split(_curlyRe);\n  var resultParts = [];\n  var escapedBlocks = [];\n  var bracketCount = 0;\n  var currentBlockParts = [];\n\n  for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    var part = inputParts[partIndex];\n\n    if (part === CLOSE_CURLY) {\n      bracketCount--;\n    }\n\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n\n      resultParts.push(part);\n    }\n\n    if (part === OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n\n  var strEscapedBlocks = {\n    escapedString: resultParts.join(''),\n    blocks: escapedBlocks\n  };\n  return strEscapedBlocks;\n};\n\nvar insertPolyfillHostInCssText = function insertPolyfillHostInCssText(selector) {\n  selector = selector.replace(_colonHostContextRe, _polyfillHostContext).replace(_colonHostRe, _polyfillHost).replace(_colonSlottedRe, _polyfillSlotted);\n  return selector;\n};\n\nvar convertColonRule = function convertColonRule(cssText, regExp, partReplacer) {\n  // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n  return cssText.replace(regExp, function () {\n    var m = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n\n    if (m[2]) {\n      var parts = m[2].split(',');\n      var r = [];\n\n      for (var i = 0; i < parts.length; i++) {\n        var p = parts[i].trim();\n        if (!p) break;\n        r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n      }\n\n      return r.join(',');\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n};\n\nvar colonHostPartReplacer = function colonHostPartReplacer(host, part, suffix) {\n  return host + part.replace(_polyfillHost, '') + suffix;\n};\n\nvar convertColonHost = function convertColonHost(cssText) {\n  return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\n\nvar colonHostContextPartReplacer = function colonHostContextPartReplacer(host, part, suffix) {\n  if (part.indexOf(_polyfillHost) > -1) {\n    return colonHostPartReplacer(host, part, suffix);\n  } else {\n    return host + part + suffix + ', ' + part + ' ' + host + suffix;\n  }\n};\n\nvar convertColonSlotted = function convertColonSlotted(cssText, slotScopeId) {\n  var slotClass = '.' + slotScopeId + ' > ';\n  var selectors = [];\n  cssText = cssText.replace(_cssColonSlottedRe, function () {\n    var m = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n\n    if (m[2]) {\n      var compound = m[2].trim();\n      var suffix = m[3];\n      var slottedSelector = slotClass + compound + suffix;\n      var prefixSelector = '';\n\n      for (var i = m[4] - 1; i >= 0; i--) {\n        var char = m[5][i];\n\n        if (char === '}' || char === ',') {\n          break;\n        }\n\n        prefixSelector = char + prefixSelector;\n      }\n\n      var orgSelector = prefixSelector + slottedSelector;\n      var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n\n      if (orgSelector.trim() !== addedSelector.trim()) {\n        var updatedSelector = addedSelector + \", \" + orgSelector;\n        selectors.push({\n          orgSelector: orgSelector,\n          updatedSelector: updatedSelector\n        });\n      }\n\n      return slottedSelector;\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n  return {\n    selectors: selectors,\n    cssText: cssText\n  };\n};\n\nvar convertColonHostContext = function convertColonHostContext(cssText) {\n  return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\n\nvar convertShadowDOMSelectors = function convertShadowDOMSelectors(cssText) {\n  return _shadowDOMSelectorsRe.reduce(function (result, pattern) {\n    return result.replace(pattern, ' ');\n  }, cssText);\n};\n\nvar makeScopeMatcher = function makeScopeMatcher(scopeSelector) {\n  var lre = /\\[/g;\n  var rre = /\\]/g;\n  scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n  return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\n\nvar selectorNeedsScoping = function selectorNeedsScoping(selector, scopeSelector) {\n  var re = makeScopeMatcher(scopeSelector);\n  return !re.test(selector);\n};\n\nvar applySimpleSelectorScope = function applySimpleSelectorScope(selector, scopeSelector, hostSelector) {\n  // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n  _polyfillHostRe.lastIndex = 0;\n\n  if (_polyfillHostRe.test(selector)) {\n    var replaceBy_1 = \".\" + hostSelector;\n    return selector.replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n      return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n        return before + replaceBy_1 + colon + after;\n      });\n    }).replace(_polyfillHostRe, replaceBy_1 + ' ');\n  }\n\n  return scopeSelector + ' ' + selector;\n};\n\nvar applyStrictSelectorScope = function applyStrictSelectorScope(selector, scopeSelector, hostSelector) {\n  var isRe = /\\[is=([^\\]]*)\\]/g;\n  scopeSelector = scopeSelector.replace(isRe, function (_) {\n    var parts = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      parts[_i - 1] = arguments[_i];\n    }\n\n    return parts[0];\n  });\n  var className = '.' + scopeSelector;\n\n  var _scopeSelectorPart = function _scopeSelectorPart(p) {\n    var scopedP = p.trim();\n\n    if (!scopedP) {\n      return '';\n    }\n\n    if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n      scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n    } else {\n      // remove :host since it should be unnecessary\n      var t = p.replace(_polyfillHostRe, '');\n\n      if (t.length > 0) {\n        var matches = t.match(/([^:]*)(:*)(.*)/);\n\n        if (matches) {\n          scopedP = matches[1] + className + matches[2] + matches[3];\n        }\n      }\n    }\n\n    return scopedP;\n  };\n\n  var safeContent = safeSelector(selector);\n  selector = safeContent.content;\n  var scopedSelector = '';\n  var startIndex = 0;\n  var res;\n  var sep = /( |>|\\+|~(?!=))\\s*/g; // If a selector appears before :host it should not be shimmed as it\n  // matches on ancestor elements and not on elements in the host's shadow\n  // `:host-context(div)` is transformed to\n  // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n  // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n  // Historically `component-tag:host` was matching the component so we also want to preserve\n  // this behavior to avoid breaking legacy apps (it should not match).\n  // The behavior should be:\n  // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n  // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n  //   `:host-context(tag)`)\n\n  var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1; // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n\n  var shouldScope = !hasHost;\n\n  while ((res = sep.exec(selector)) !== null) {\n    var separator = res[1];\n    var part_1 = selector.slice(startIndex, res.index).trim();\n    shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n    var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n    scopedSelector += scopedPart + \" \" + separator + \" \";\n    startIndex = sep.lastIndex;\n  }\n\n  var part = selector.substring(startIndex);\n  shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n  scopedSelector += shouldScope ? _scopeSelectorPart(part) : part; // replace the placeholders with their original values\n\n  return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\n\nvar scopeSelector = function scopeSelector(selector, scopeSelectorText, hostSelector, slotSelector) {\n  return selector.split(',').map(function (shallowPart) {\n    if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n      return shallowPart.trim();\n    }\n\n    if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n      return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n    } else {\n      return shallowPart.trim();\n    }\n  }).join(', ');\n};\n\nvar scopeSelectors = function scopeSelectors(cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n  return processRules(cssText, function (rule) {\n    var selector = rule.selector;\n    var content = rule.content;\n\n    if (rule.selector[0] !== '@') {\n      selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n    } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n      content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n    }\n\n    var cssRule = {\n      selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n      content: content\n    };\n    return cssRule;\n  });\n};\n\nvar scopeCssText = function scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n  cssText = insertPolyfillHostInCssText(cssText);\n  cssText = convertColonHost(cssText);\n  cssText = convertColonHostContext(cssText);\n  var slotted = convertColonSlotted(cssText, slotScopeId);\n  cssText = slotted.cssText;\n  cssText = convertShadowDOMSelectors(cssText);\n\n  if (scopeId) {\n    cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n  }\n\n  cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n  cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n  return {\n    cssText: cssText.trim(),\n    slottedSelectors: slotted.selectors\n  };\n};\n\nvar scopeCss = function scopeCss(cssText, scopeId, commentOriginalSelector) {\n  var hostScopeId = scopeId + '-h';\n  var slotScopeId = scopeId + '-s';\n  var commentsWithHash = extractCommentsWithHash(cssText);\n  cssText = stripComments(cssText);\n  var orgSelectors = [];\n\n  if (commentOriginalSelector) {\n    var processCommentedSelector_1 = function processCommentedSelector_1(rule) {\n      var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n      var comment = \"/*!@\" + rule.selector + \"*/\";\n      orgSelectors.push({\n        placeholder: placeholder,\n        comment: comment\n      });\n      rule.selector = placeholder + rule.selector;\n      return rule;\n    };\n\n    cssText = processRules(cssText, function (rule) {\n      if (rule.selector[0] !== '@') {\n        return processCommentedSelector_1(rule);\n      } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        rule.content = processRules(rule.content, processCommentedSelector_1);\n        return rule;\n      }\n\n      return rule;\n    });\n  }\n\n  var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n  cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n\n  if (commentOriginalSelector) {\n    orgSelectors.forEach(function (_a) {\n      var placeholder = _a.placeholder,\n          comment = _a.comment;\n      cssText = cssText.replace(placeholder, comment);\n    });\n  }\n\n  scoped.slottedSelectors.forEach(function (slottedSelector) {\n    cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n  });\n  return cssText;\n};\n\nexport { scopeCss };","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","'use strict';\nvar $ = require('../internals/export');\nvar $trimEnd = require('../internals/string-trim').end;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\nvar FORCED = forcedStringTrimMethod('trimEnd');\n\nvar trimEnd = FORCED ? function trimEnd() {\n  return $trimEnd(this);\n} : ''.trimEnd;\n\n// `String.prototype.{ trimEnd, trimRight }` methods\n// https://tc39.es/ecma262/#sec-string.prototype.trimend\n// https://tc39.es/ecma262/#String.prototype.trimright\n$({ target: 'String', proto: true, forced: FORCED }, {\n  trimEnd: trimEnd,\n  trimRight: trimEnd\n});\n"],"sourceRoot":""}